<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>

        <IsPackable>false</IsPackable>
        <IsTestProject>true</IsTestProject>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="coverlet.collector" Version="6.0.0"/>
        <PackageReference Include="FakeItEasy" Version="8.2.0"/>
        <PackageReference Include="FluentAssertions" Version="6.12.0"/>
        <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.8.0"/>
        <PackageReference Include="xunit" Version="2.5.3"/>
        <PackageReference Include="xunit.runner.visualstudio" Version="2.5.3"/>
    </ItemGroup>

    <ItemGroup>
        <Using Include="Xunit"/>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\CodeGraph.Domain\CodeGraph.Domain.csproj"/>
    </ItemGroup>

    <ItemGroup>
        <None Update="CodeToTest\**\*.csharp">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Update="CodeToTest\CSharp\MethodsAndProperties\ClassWithProperties.csharp">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Update="CodeToTest\CSharp\MethodsAndProperties\ClassWithCustomPropertyTypes.csharp">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Update="CodeToTest\CSharp\TypeDefinitions\ClassWithAbstractBaseClass.csharp">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Update="CodeToTest\CSharp\TypeDefinitions\ClassWithInterface.csharp">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Update="CodeToTest\CSharp\TypeDefinitions\ClassWithInterfaceDefinedMethods.csharp">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Update="CodeToTest\CSharp\TypeDefinitions\ClassWithoutInterface.csharp">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Update="CodeToTest\CSharp\TypeDefinitions\HasGenericCustomInterface.csharp">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Update="CodeToTest\CSharp\TypeDefinitions\HasGenericInBuiltInterface.csharp">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Update="CodeToTest\CSharp\TypeDefinitions\InterfaceDerivingFromInterface.csharp">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Update="CodeToTest\CSharp\TypeDefinitions\RecordDefinition.csharp">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Update="CodeToTest\CSharp\MethodInvocation\ClassWithMultipleSelfInvocation.csharp">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Update="CodeToTest\CSharp\MethodInvocation\ClassWithInvocationFromAnotherClass.csharp">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Update="CodeToTest\CSharp\TypeDefinition\ClassWithInterfaceDefinedMethods.csharp">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Update="CodeToTest\CSharp\InterfaceImplementation\GenericReturnTypeSeparateNamespaces.cs">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
    </ItemGroup>

</Project>
