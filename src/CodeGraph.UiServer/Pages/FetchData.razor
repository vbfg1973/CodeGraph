@page "/fetchdata"
@using CodeGraph.Clients
@using CodeGraph.Clients.Dto.Methods
@using CodeGraph.UiServer.Data
@inject WeatherForecastService ForecastService
@inject CodeGraphMethodClient MethodClient

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (_forecasts == null || _methodQueryResult == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th>Temp. (C)</th>
            <th>Temp. (F)</th>
            <th>Summary</th>
        </tr>
        </thead>
        <tbody>
        @foreach (WeatherForecast forecast in _forecasts)
        {
            <tr>
                <td>@forecast.Date.ToShortDateString()</td>
                <td>@forecast.TemperatureC</td>
                <td>@forecast.TemperatureF</td>
                <td>@forecast.Summary</td>
            </tr>
        }
        </tbody>
    </table>

    <table>
        <thead>
        <tr>
            <th>Method Owner</th>
            <th>Method Owner Type</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>@_methodQueryResult?.MethodOwnerName</td>
            <td>@_methodQueryResult?.MethodOwnerType</td>
        </tr>
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? _forecasts;
    private MethodResultDto? _methodQueryResult;

    protected override async Task OnInitializedAsync()
    {
        _methodQueryResult = await MethodClient.GetMethodByPk(-938388909);
        _forecasts = await ForecastService.GetForecastAsync(DateOnly.FromDateTime(DateTime.Now));
    }

}