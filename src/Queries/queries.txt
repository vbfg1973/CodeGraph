-- Find methods that implement an interface method where the interface was defined within the codebase 
                  MATCH (c)-[:HAS]-(classMethod:Method)-[:IMPLEMENTS]->(interfaceMethod:Method)<-[:HAS]-(i:Interface)
                    RETURN i.fullName AS InterfaceFullName,
                           i.name AS InterfaceName,
                           i.pk AS InterfacePk,
                           
                           interfaceMethod.fullName AS InterfaceMethodFullName,
                           interfaceMethod.name AS InterfaceMethodName,
                           interfaceMethod.pk AS InterfaceMethodPk,
                           
                           c.fullName AS ClassFullName,
                           c.name AS ClassName,
                           c.pk AS ClassPk,
                           
                           classMethod.fullName AS ClassMethodFullName,
                           classMethod.name AS ClassMethodName,
                           classMethod.pk AS ClassMethodPk
                    ORDER BY InterfaceFullName, InterfaceMethodName
  
-- Find invocations of methods that are defined within the codebase, ordered by invocation order
                  MATCH (c)-[:HAS]-(cm:Method)-[:INVOKES]-(i:Invocation)-[:INVOKED_AT]-(at:InvocationLocation)
                  MATCH (i)-[:INVOCATION_OF]-(im)-[:HAS]-(pt)
                  RETURN c.fullName AS ClassFullName,
                         c.name AS ClassName,
                         c.pk AS ClassPk,
                         
                         cm.fullName AS ClassMethodFullName,
                         cm.name AS ClassMethodName,
                         cm.pk AS ClassMethodPk,
                         
                  	     pt.fullName AS InvokedMethodOwnerFullName,
                  	     pt.name AS InvokedMethodOwnerName,
                  	     pt.pk AS InvokedMethodOwnerPk,
                  	     
                         im.fullName AS InvokedMethodFullName,
                         im.name AS InvokedMethodName,
                         im.pk AS InvokedMethodPk,
                         
                  	     labels(pt)[1] AS InvokedMethodOwnerType,
                  	     
                  	     at.fullName AS Location
                  ORDER BY cm.fullName,
                           at.fullName
  
-- Find invocation chains from a nominated method to the surface
   ...
   
-- Find invocation chains between two points
   
-- Find invocation chains from the surface to their conclusion, generating PlantUML Sequence diagrams (Mermaid likely better in Blazor)
   -- Resolve interface methods to those implemented in codebase
   -- Allow ignoring of interface methods implemented in classes matching a supplied pattern - test project, namespaces, etc